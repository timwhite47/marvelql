type Character implements Node {
  # Marvel API ID
  id: ID!

  # Name of character
  name: String

  # A short bio or description of the character.
  description: String

  # The date the resource was most recently modified.
  modified: String

  # The canonical URL identifier for this resource
  resourceURI: String
  thumbnail: String

  # Comics the character appears in.
  comics: [Comic]
}

type Comic {
  # Marvel API ID
  id: ID

  # Digital Comic ID
  digitalId: String

  # The canonical id of the comic
  title: String

  # The number of the issue in the series (will generally be 0 for collection formats)
  issueNumber: Int

  #  The publication format of the comic e.g. comic, hardcover, trade paperback.
  format: String

  # Series that comic belongs to.
  series: Series

  # A list of promotional images associated with this comic.
  images: [Image]

  # The representative image for this comic
  thumbnail: Image

  # A set of public web site URLs for the resource
  urls: [URL]
}

type Image {
  url: String
}

# An object with an ID
interface Node {
  # The id of the object.
  id: ID!
}

type Query {
  # Fetches an object given its ID
  node(
    # The ID of an object
    id: ID!
  ): Node
  viewer: Viewer
  character(
    # Marvel API Character ID
    id: String
  ): Character
}

type Series {
  # The id of the series
  id: String

  # The name of the series
  name: String
}

type URL {
  # A text identifier for the URL
  type: String

  # A full URL (including scheme, domain, and path)
  url: String
}

type Viewer {
  characters(
    # Search String to look up characters
    search: String

    # Number of characters to return
    limit: Int
  ): [Character]
}
